# SecureShare API Documentation

This document describes all the API endpoints available in the SecureShare application. Use these specifications for testing with Postman or any API client.

## Environment Variables

For convenience in API testing, set up these variables in your environment:
- `{{base_url}}`: The base URL of your API (e.g., http://localhost:8000)
- `{{token}}`: Authentication token received after login
- `{{file_id}}`: ID of a file you want to operate on
- `{{download_token}}`: Single-use token for file downloads

## 1. Authentication Endpoints

### 1.1 User Signup
- **URL**: `/api/users/signup/`
- **Method**: POST
- **Headers**: 
  - Content-Type: application/json
- **Request Body**:
```json
{
    "email": "user@example.com",
    "password": "SecurePassword123",
    "password_confirm": "SecurePassword123",
    "user_type": "CLIENT"  // Options: "CLIENT", "OPERATIONS"
}
```
- **Success Response**: 201 Created
```json
{
    "id": 1,
    "email": "user@example.com",
    "user_type": "CLIENT",
    "message": "Verification email sent"
}
```

### 1.2 User Login
- **URL**: `/api/users/login/`
- **Method**: POST
- **Headers**: 
  - Content-Type: application/json
- **Request Body**:
```json
{
    "email": "user@example.com",
    "password": "SecurePassword123"
}
```
- **Success Response**: 200 OK
```json
{
    "token": "your-auth-token",
    "user_id": 1,
    "email": "user@example.com",
    "user_type": "CLIENT"
}
```

### 1.3 Email Verification
- **URL**: `/api/users/verify/{token}/`
- **Method**: GET
- **Success Response**: 200 OK
```json
{
    "message": "Email successfully verified"
}
```

## 2. File Management Endpoints

### 2.1 Upload File (Operations Users Only)
- **URL**: `/api/files/upload/`
- **Method**: POST
- **Headers**: 
  - Authorization: Token {{token}}
- **Body**: Form-data
  - Key: `file`, Value: [Select file]
  - Key: `description`, Value: "File description"
- **Success Response**: 201 Created
```json
{
    "id": 1,
    "filename": "document.docx",
    "description": "File description",
    "upload_date": "2024-05-14T12:00:00Z",
    "size": 12345
}
```

### 2.2 List All Files
- **URL**: `/api/files/list/`
- **Method**: GET
- **Headers**: 
  - Authorization: Token {{token}}
- **Success Response**: 200 OK
```json
{
    "files": [
        {
            "id": 1,
            "filename": "document.docx",
            "description": "File description",
            "upload_date": "2024-05-14T12:00:00Z",
            "size": 12345
        }
    ]
}
```

### 2.3 Get File Download Link
- **URL**: `/api/files/download-link/{file_id}/`
- **Method**: GET
- **Headers**: 
  - Authorization: Token {{token}}
- **Success Response**: 200 OK
```json
{
    "download_token": "single-use-token",
    "expires_at": "2024-05-14T13:00:00Z",
    "file_id": 1
}
```

### 2.4 Download File with Token
- **URL**: `/api/files/download/{download_token}/`
- **Method**: GET
- **Success Response**: 200 OK (File download)

## 3. Web Interface Endpoints

These endpoints render HTML templates rather than returning JSON responses:

### 3.1 Home/Landing Page
- **URL**: `/`
- **Method**: GET

### 3.2 User Authentication Pages
- **Login**: `/login/`
- **Signup**: `/signup/`
- **Method**: GET

### 3.3 File Management Pages
- **Upload Page**: `/upload/` (Operations users only)
- **Files List**: `/files/`
- **Method**: GET
- **Headers**: 
  - Authorization: Token {{token}} (or session cookie from web login)

## Testing Workflow

1. Register a new user (both CLIENT and OPERATIONS for full testing)
2. Verify email addresses using the verification links
3. Login to get authentication tokens
4. For OPERATIONS users: Upload files
5. For both user types: List available files
6. Get download links for files
7. Download files using the single-use tokens